{"version":3,"sources":["utils/index.js","constants/index/index.js","utils/request.js","assets/icons/logo.svg","reducers/index/index.js","reducers/user/index.js","reducers/index.js","store/index.js","components/loading/index.js","router/index.js","view/index/index.js","App.js","serviceWorker.js","index.js","constants/config.js","constants/api.js","constants/user/index.js","actions/user/index.js"],"names":["formatDate","dateStr","fmt","date","Date","test","replace","RegExp","$1","getFullYear","substr","length","o","getMonth","getDate","getHours","getMinutes","getSeconds","k","str","padLeftZero","setLocalStorage","key","val","localStorage","setItem","getLocalStorage","getItem","SETLISTLOADING","SETDETAILLOADING","SETCOLLECTLISTLOADING","CHANGETABITEM","GETTOPICDETAIL","COLLECTTOPIC","DECOLLECTTOPIC","GETCOLLECTLIST","httpRequest","axios","create","timeout","withCredentials","headers","interceptors","response","use","data","error","undefined","code","warning","status","error_msg","Promise","reject","module","exports","INDEX_STATE","listLoading","detailLoading","collectListLoading","tabList","tab","changetab","searchData","page","limit","mdrender","dataList","dataDetail","collectList","USER_STATE","loginLoading","userinfoLoading","messageListLoading","token","simpleUserInfo","userInfo","messageCount","messageList","combineReducers","index","state","action","type","is_collect","dedataDetail","user","SETLOGINLOADING","SETUSERINFOLOADING","SETMESSAGELISTLOADING","SETTOKEN","ACCESSTOKEN","GETUSERINFO","GETMESSAGECOUNT","GETMESSAGELIST","middlewares","thunkMiddleware","enhancer","applyMiddleware","Loading","style","width","height","tip","size","this","props","children","Component","routes","path","exact","component","Loadable","loader","loading","Header","Content","Footer","Index","getmessagecount","clear","window","history","go","id","className","src","require","alt","to","dot","count","href","rel","target","onClick","goLoginOut","bind","margin","map","route","render","from","textAlign","backgroundColor","color","connect","dispatch","App","Boolean","location","hostname","match","store","createStore","rootReducer","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","config","process","BASE_URL","IS_PROD","CODE_BASE_PORT","GATEWAY_URL","API_TOPICS","API_TOPIC","API_TOPIC_COLLECT","API_TOPIC_DECOLLECT","API_TOPIC_COLLECTLIST","API_USER","API_ACCESSTOKEN","API_MESSAGE_COUNT","API_MESSAGE","API_MESSAGE_MARKALL","API_MESSAGE_MARKONE","setloginloading","accesstoken","url","method","res","resData","success","loginname","catch","e","console","log","getuserinfo","userName","params","getmessagelist","readonemessage","readallmessage"],"mappings":"uIAKO,SAASA,EAAYC,EAASC,GACnC,IAAIC,EAAO,IAAIC,KAAKH,GAChB,OAAOI,KAAKH,KACdA,EAAMA,EAAII,QAAQC,OAAOC,IAAKL,EAAKM,cAAgB,IAAIC,OAAO,EAAIH,OAAOC,GAAGG,UAE9E,IAAIC,EAAI,CACN,KAAMT,EAAKU,WAAa,EACxB,KAAMV,EAAKW,UACX,KAAMX,EAAKY,WACX,KAAMZ,EAAKa,aACX,KAAMb,EAAKc,cAEb,IAAK,IAAIC,KAAKN,EACZ,GAAI,IAAIL,OAAJ,WAAeW,EAAf,MAAqBb,KAAKH,GAAM,CAClC,IAAIiB,EAAMP,EAAEM,GAAK,GACjBhB,EAAMA,EAAII,QAAQC,OAAOC,GAAyB,IAArBD,OAAOC,GAAGG,OAAeQ,EAAMC,EAAYD,IAG5E,OAAOjB,EAIT,SAASkB,EAAaD,GACpB,OAAQ,KAAOA,GAAKT,OAAOS,EAAIR,QAQ1B,SAASU,EAAiBC,EAAKC,GACpCC,aAAaC,QAAQH,EAAKC,GAOrB,SAASG,EAAiBJ,GAC/B,OAAOE,aAAaG,QAAQL,GA7C9B,uG,gCCAA,gRACO,IAAMM,EAAiB,iBAEjBC,EAAmB,mBAEnBC,EAAwB,wBAExBC,EAAgB,gBAEhBC,EAAiB,iBAEjBC,EAAe,eAEfC,EAAiB,iBAEjBC,EAAiB,kB,iFCZxBC,E,OAAcC,EAAMC,OAAO,CAC/BC,QAAS,IACTC,iBAAiB,EACjBC,QAAS,CACP,eAAgB,qCAOpBL,EAAYM,aAAaC,SAASC,KAAI,SAAAD,GACpC,OAAOA,EAASE,QACf,SAAAC,QACaC,IAAVD,GAAsC,iBAAfA,EAAME,MAC/B,IAAQC,QAAQ,wCAFR,IAIFN,EAAaG,EAAbH,SAMR,OALwB,MAApBA,EAASO,OACX,IAAQJ,MAAMH,EAASE,KAAKM,WAAa,4BACZ,MAApBR,EAASO,QAClB,IAAQJ,MAAMH,EAASE,KAAKM,WAAa,4BAEpCC,QAAQC,OAAOP,MAGTV,O,oBC7BfkB,EAAOC,QAAU,IAA0B,kC,oHCErCC,EAAc,CAClBC,aAAa,EACbC,eAAe,EACfC,oBAAoB,EACpBC,QAAS,CACP,CAAEtC,IAAK,MAAOuC,IAAK,gBACnB,CAAEvC,IAAK,OAAQuC,IAAK,gBACpB,CAAEvC,IAAK,QAASuC,IAAK,gBACrB,CAAEvC,IAAK,MAAOuC,IAAK,gBACnB,CAAEvC,IAAK,MAAOuC,IAAK,gBACnB,CAAEvC,IAAK,MAAOuC,IAAK,mCAErBC,UAAW,CAAExC,IAAK,MAAOuC,IAAK,gBAC9BE,WAAY,CACVC,KAAM,EACNH,IAAK,MACLI,MAAO,GACPC,UAAU,GAEZC,SAAU,GACVC,WAAY,GACZC,YAAa,I,WCrBTC,EAAa,CACjBC,cAAc,EACdC,iBAAiB,EACjBC,oBAAoB,EACpBC,MAAO,GACPC,eAAgB,GAChBC,SAAU,GACVC,aAAc,EACdC,YAAa,ICNAC,kBAAgB,CAC7BC,MFqBa,WAA8C,IAA9BC,EAA6B,uDAArBzB,EAAa0B,EAAQ,uCAC1D,OAAQA,EAAOC,MACf,KAAKvD,IACH,OAAO,2BACFqD,GADL,IAEExB,YAAayB,EAAOzB,cAExB,KAAK5B,IACH,OAAO,2BACFoD,GADL,IAEEvB,cAAewB,EAAOxB,gBAE1B,KAAK5B,IACH,OAAO,2BACFmD,GADL,IAEEtB,mBAAoBuB,EAAOvB,qBAE/B,KAAK5B,IACH,OAAO,2BACFkD,GADL,IAEExB,aAAa,EACbK,UAAWoB,EAAOrC,KAClBkB,WAAYmB,EAAOnB,WACnBI,SAAUe,EAAOf,WAErB,KAAKnC,IACH,OAAO,2BACFiD,GADL,IAEEvB,eAAe,EACfU,WAAYc,EAAOd,aAEvB,KAAKnC,IAEH,IAAImC,EAAaa,EAAMb,WAEvB,OADAA,EAAWgB,WAAaF,EAAOE,WACxB,2BACFH,GADL,IAEEb,WAAYA,IAEhB,KAAKlC,IAEH,IAAImD,EAAeJ,EAAMb,WAEzB,OADAiB,EAAaD,WAAaF,EAAOE,WAC1B,2BACFH,GADL,IAEEb,WAAYiB,IAEhB,KAAKlD,IACH,OAAO,2BACF8C,GADL,IAEEtB,oBAAoB,EACpBU,YAAaa,EAAOb,cAExB,QACE,OAAOY,IE1ETK,KDOa,WAA6C,IAA7BL,EAA4B,uDAApBX,EAAYY,EAAQ,uCACzD,OAAQA,EAAOC,MACf,KAAKI,IACH,OAAO,2BACFN,GADL,IAEEV,aAAcW,EAAOX,eAEzB,KAAKiB,IACH,OAAO,2BACFP,GADL,IAEET,gBAAiBU,EAAOV,kBAE5B,KAAKiB,IACH,OAAO,2BACFR,GADL,IAEER,mBAAoBS,EAAOT,qBAE/B,KAAKiB,IACH,OAAO,2BACFT,GADL,IAEEV,cAAc,EACdG,MAAOQ,EAAOR,QAElB,KAAKiB,IACH,OAAO,2BACFV,GADL,IAEEN,eAAgBO,EAAOrC,OAE3B,KAAK+C,IACH,OAAO,2BACFX,GADL,IAEET,iBAAiB,EACjBI,SAAUM,EAAOrC,OAErB,KAAKgD,IACH,OAAO,2BACFZ,GADL,IAEEJ,aAAcK,EAAOrC,OAEzB,KAAKiD,IACH,OAAO,2BACFb,GADL,IAEER,oBAAoB,EACpBK,YAAaI,EAAOrC,OAExB,QACE,OAAOoC,MEvDLc,EAAc,CAClBC,KAMF,IAAMC,EAAWC,IAAe,WAAf,EAAmBH,G,2ICSrBI,E,uKAdX,OACE,yBAAKC,MAAO,CAACC,MAAO,OAAQC,OAAQ,SAClC,uBAAMC,IAAI,aAAaC,KAAK,QAAQJ,MAAO,CAACC,MAAO,OAAQC,OAAQ,SAC/DG,KAAKC,MAAMC,e,GALDC,aCsCPC,EAvCF,CACX,CACEC,KAAM,IACNC,OAAO,EACPC,UAAWC,IAAS,CAClBC,OAAQ,kBAAM,oEACdC,QAAShB,KAGb,CACEW,KAAM,WACNE,UAAWC,IAAS,CAClBC,OAAQ,kBAAM,2EACdC,QAAShB,KAGb,CACEW,KAAM,WACNE,UAAWC,IAAS,CAClBC,OAAQ,kBAAM,mEACdC,QAAShB,KAGb,CACEW,KAAM,SACNE,UAAWC,IAAS,CAClBC,OAAQ,kBAAM,oEACdC,QAAShB,KAGb,CACEW,KAAM,UACNE,UAAWC,IAAS,CAClBC,OAAQ,kBAAM,2EACdC,QAAShB,MCzBPiB,G,WAAAA,QAAQC,E,IAAAA,QAASC,E,IAAAA,OAEnBC,E,kDACJ,WAAYb,GAAQ,IAAD,8BACjB,cAAMA,IACDzB,MAAQ,GAFI,E,yEAObwB,KAAKC,MAAMpB,KAAKZ,OAAShD,YAAgB,WAC3C+E,KAAKC,MAAMc,gBAAgB,CAAC9C,MAAO+B,KAAKC,MAAMpB,KAAKZ,OAAShD,YAAgB,a,mCAM9EF,aAAaiG,QACbC,OAAOC,QAAQC,GAAG,K,+BAIlB,OACE,kBAAC,IAAD,KACE,uBAAQC,GAAG,2BACT,kBAACT,EAAD,CAAQhB,MAAO,CAAEC,MAAO,SACtB,yBAAKyB,UAAU,eACb,yBAAKA,UAAU,OAAOC,IAAMC,EAAQ,KAAiCC,IAAI,SACzE,0BAAMH,UAAU,mCACd,8BAAM,kBAAC,IAAD,CAAMI,GAAG,KAAT,iBAEJzB,KAAKC,MAAMpB,KAAKZ,OAAShD,YAAgB,SAAW,uBAAOyG,KAAK,EAAMC,MAAO3B,KAAKC,MAAMpB,KAAKT,cAC3F,8BAAM,kBAAC,IAAD,CAAMqD,GAAG,YAAT,kBACG,GAGXzB,KAAKC,MAAMpB,KAAKZ,OAAShD,YAAgB,SAAW,8BAAM,kBAAC,IAAD,CAAMwG,GAAG,YAAT,iBAAuC,GAEnG,8BAAM,uBAAGG,KAAK,2CAA2CC,IAAI,sBAAsBC,OAAO,UAApF,uBAEJ9B,KAAKC,MAAMpB,KAAKZ,OAAShD,YAAgB,SAAW,8BAAM,0BAAM8G,QAAS/B,KAAKgC,WAAWC,KAAKjC,OAApC,iBAA8D,8BAAM,kBAAC,IAAD,CAAMyB,GAAG,UAAT,oBAKtI,kBAACb,EAAD,CAASS,UAAU,cAAc1B,MAAO,CAAEC,MAAO,MAAOsC,OAAQ,cAC9D,6BACE,kBAAC,IAAD,KAEI9B,EAAO+B,KAAI,SAACC,EAAMvH,GAChB,OAAGuH,EAAM9B,MACA,kBAAC,IAAD,CAAOzF,IAAKA,EAAKyF,OAAK,EAACD,KAAM+B,EAAM/B,KACxCgC,OAAQ,SAAApC,GAAK,OACX,kBAACmC,EAAM7B,UAAP,iBAAqBN,EAArB,CAA4BG,OAAQgC,EAAMhC,aAIvC,kBAAC,IAAD,CAAQvF,IAAKA,EAAMwF,KAAM+B,EAAM/B,KACpCgC,OAAQ,SAAApC,GAAK,OACX,kBAACmC,EAAM7B,UAAP,iBAAqBN,EAArB,CAA4BG,OAAQgC,EAAMhC,gBAMpD,kBAAC,IAAD,CAAUkC,KAAK,KAAKb,GAAG,SAI7B,kBAACZ,EAAD,CAAQlB,MAAO,CAAE4C,UAAW,SAAUC,gBAAiB,UAAWC,MAAO,YACvE,+MACA,8F,GArEQtC,aAmFLuC,eAAQ,SAAClE,GACtB,MAAO,CACLK,KAAML,EAAMK,SAEb,SAAC8D,GACF,MAAO,CACL5B,gBAAiB,SAAC3E,GAAD,OAAUuG,EAAS5B,YAAgB3E,QANzCsG,CAQZ5B,GChGY8B,MANf,WACE,OACE,kBAAC,EAAD,OCQgBC,QACW,cAA7B5B,OAAO6B,SAASC,UAEe,UAA7B9B,OAAO6B,SAASC,UAEhB9B,OAAO6B,SAASC,SAASC,MACvB,2DCXN,IAAMC,ENMUC,YAAYC,EAAa3D,GMJzC4D,IAASf,OACP,kBAAC,IAAD,CAAUY,MAAOA,GACf,kBAAC,EAAD,OAEFI,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB,sZEpInB,IAAMC,EAAS,CAEfA,SAAiBC,GAEjBD,EAAOE,UAAWF,EAAOG,QAAU,uBAEnCH,EAAOI,eAAiB,GAExBJ,EAAOK,YAAcL,EAAOE,SAAWF,EAAOI,eAE/BJ,QCRFM,EAAU,UAAMN,EAAOK,YAAb,kBACVE,EAAS,UAAMP,EAAOK,YAAb,kBAGTG,EAAiB,UAAMR,EAAOK,YAAb,iCACjBI,EAAmB,UAAMT,EAAOK,YAAb,oCACnBK,EAAqB,UAAMV,EAAOK,YAAb,0BAGrBM,EAAQ,UAAMX,EAAOK,YAAb,iBACRO,EAAe,UAAMZ,EAAOK,YAAb,uBAGfQ,EAAiB,UAAMb,EAAOK,YAAb,yBACjBS,EAAW,UAAMd,EAAOK,YAAb,oBACXU,EAAmB,UAAMf,EAAOK,YAAb,4BACnBW,EAAmB,UAAMhB,EAAOK,YAAb,8B,+BCpBhC,gRACO,IAAMpF,EAAkB,kBAElBC,EAAqB,qBAErBC,EAAwB,wBAExBC,EAAW,WAEXC,EAAc,cAEdC,EAAc,cAEdC,EAAkB,kBAElBC,EAAiB,kB,gCCf9B,+OAeayF,EAAkB,SAAChK,GAC9B,MAAO,CACL4D,KAAMI,IACNhB,aAAchD,IA6BLiK,EAAc,SAAC3I,GAC1B,OAAO,SAAAuG,GACLA,EAASmC,GAAgB,IACzBnJ,YAAY,CACVqJ,IAAKP,IACLQ,OAAQ,OACR7I,KAAM,CACJ2I,YAAa3I,EAAK6B,SAEnByF,MAAK,SAACwB,GACP,IAAIC,EAAU,CACZzG,KAAMQ,IACN9C,KAAM8I,GAEJA,EAAIE,UACNxK,YAAgB,QAASwB,EAAK6B,OAC9BrD,YAAgB,WAAYsK,EAAIG,WAChC1C,EAAqBwC,OAEtBG,OAAM,SAACC,GACR5C,EAASmC,GAAgB,IACzBU,QAAQC,IAAIF,QAKLG,EAAc,SAACtJ,GAC1B,OAAO,SAAAuG,GApDyB,IAAC7H,EAqD/B6H,GArD+B7H,GAqDH,EApDvB,CACL4D,KAAMK,IACNhB,gBAAiBjD,KAmDjBa,YAAY,CACVqJ,IAAKR,IAAWpI,EAAKuJ,SACrBV,OAAQ,QACPvB,MAAK,SAACwB,GACP,IAAIC,EAAU,CACZzG,KAAMS,IACN/C,KAAM8I,EAAI9I,MAEZuG,EAAqBwC,MACpBG,OAAM,SAACC,GACRC,QAAQC,IAAIF,QAKLxE,EAAkB,SAAC3E,GAC9B,OAAO,SAAAuG,GACLhH,YAAY,CACVqJ,IAAKN,IACLO,OAAQ,MACRW,OAAQ,CACNb,YAAa3I,EAAK6B,SAEnByF,MAAK,SAACwB,GACP,IAAIC,EAAU,CACZzG,KAAMU,IACNhD,KAAM8I,EAAIE,QAAUF,EAAI9I,KAAO8I,GAEjCvC,EAAqBwC,MACpBG,OAAM,SAACC,GACRC,QAAQC,IAAIF,QAKLM,EAAiB,SAACzJ,GAC7B,OAAO,SAAAuG,GAnF4B,IAAC7H,EAoFlC6H,GApFkC7H,GAoFH,EAnF1B,CACL4D,KAAMM,IACNhB,mBAAoBlD,KAkFpBa,YAAY,CACVqJ,IAAKL,IACLM,OAAQ,MACRW,OAAQ,CACNb,YAAa3I,EAAK6B,MAClBR,UAAU,KAEXiG,MAAK,SAACwB,GACP,IAAIC,EAAU,CACZzG,KAAMW,IACNjD,KAAM8I,EAAI9I,MAEZuG,EAAqBwC,MACpBG,OAAM,SAACC,GACRC,QAAQC,IAAIF,QAKLO,EAAiB,SAAC1J,GAC7B,OAAO,SAAAuG,GACLhH,YAAY,CACVqJ,IAAKH,IAAsBzI,EAAKgF,GAChC6D,OAAQ,OACR7I,KAAM,CACJ2I,YAAa3I,EAAK6B,SAEnByF,MAAK,WACNf,EAASkD,EAAe,CAAC5H,MAAO7B,EAAK6B,YACpCqH,OAAM,SAACC,GACRC,QAAQC,IAAIF,QAKLQ,EAAiB,SAAC3J,GAC7B,OAAO,SAAAuG,GACLhH,YAAY,CACVqJ,IAAKJ,IACLK,OAAQ,OACR7I,KAAM,CACJ2I,YAAa3I,EAAK6B,SAEnByF,MAAK,WACNf,EAASkD,EAAe,CAAC5H,MAAO7B,EAAK6B,YACpCqH,OAAM,SAACC,GACRC,QAAQC,IAAIF,S","file":"static/js/main.90808e40.chunk.js","sourcesContent":["/**\r\n * 日期格式化\r\n * @param {*} dateStr\r\n * @param {*} fmt\r\n */\r\nexport function formatDate (dateStr, fmt) {\r\n  let date = new Date(dateStr);\r\n  if (/(y+)/.test(fmt)) {\r\n    fmt = fmt.replace(RegExp.$1, (date.getFullYear() + \"\").substr(4 - RegExp.$1.length));\r\n  }\r\n  let o = {\r\n    \"M+\": date.getMonth() + 1,\r\n    \"d+\": date.getDate(),\r\n    \"h+\": date.getHours(),\r\n    \"m+\": date.getMinutes(),\r\n    \"s+\": date.getSeconds()\r\n  };\r\n  for (let k in o) {\r\n    if (new RegExp(`(${k})`).test(fmt)) {\r\n      let str = o[k] + \"\";\r\n      fmt = fmt.replace(RegExp.$1, RegExp.$1.length === 1 ? str : padLeftZero(str));\r\n    }\r\n  }\r\n  return fmt;\r\n}\r\n\r\n// 补零函数\r\nfunction padLeftZero (str) {\r\n  return (\"00\" + str).substr(str.length);\r\n}\r\n\r\n/**\r\n * 本地保存数据\r\n * @param {*} key \r\n * @param {*} val \r\n */\r\nexport function setLocalStorage (key, val) {\r\n  localStorage.setItem(key, val);\r\n}\r\n\r\n/**\r\n * 获取本地保存数据\r\n * @param {*} key \r\n */\r\nexport function getLocalStorage (key) {\r\n  return localStorage.getItem(key);\r\n}","// 设置列表loading状态\r\nexport const SETLISTLOADING = \"SETLISTLOADING\";\r\n// 设置详情loading状态\r\nexport const SETDETAILLOADING = \"SETDETAILLOADING\";\r\n// 设置收藏列表loading状态\r\nexport const SETCOLLECTLISTLOADING = \"SETCOLLECTLISTLOADING\";\r\n// 列表标签选中获取数据\r\nexport const CHANGETABITEM = \"CHANGETABITEM\";\r\n// 获取详情数据\r\nexport const GETTOPICDETAIL = \"GETTOPICDETAIL\";\r\n// 收藏主题\r\nexport const COLLECTTOPIC = \"COLLECTTOPIC\";\r\n// 取消收藏主题\r\nexport const DECOLLECTTOPIC = \"DECOLLECTTOPIC\";\r\n// 获取收藏列表\r\nexport const GETCOLLECTLIST = \"GETCOLLECTLIST\";","import axios from \"axios\";\r\nimport { message } from \"antd\";\r\n\r\nconst httpRequest = axios.create({\r\n  timeout: 1000 * 60,\r\n  withCredentials: false,\r\n  headers: {\r\n    \"Content-Type\": \"application/json; charset=utf-8\"\r\n  }\r\n});\r\n\r\n/**\r\n * 响应拦截\r\n */\r\nhttpRequest.interceptors.response.use(response => {\r\n  return response.data;\r\n}, error => {\r\n  if (error === undefined || error.code === \"ECONNABORTED\") {\r\n    message.warning(\"服务请求超时\");\r\n  }\r\n  const { response } = error;\r\n  if (response.status === 401) { // 401, token失效\r\n    message.error(response.data.error_msg || \"登录失败\");\r\n  } else if (response.status !== 200) { // 非200, 请求失败\r\n    message.error(response.data.error_msg || \"请求失败\");\r\n  }\r\n  return Promise.reject(error);\r\n});\r\n\r\nexport default httpRequest;","module.exports = __webpack_public_path__ + \"static/media/logo.e2b40b75.svg\";","import { SETLISTLOADING, SETDETAILLOADING, SETCOLLECTLISTLOADING, CHANGETABITEM, GETTOPICDETAIL, COLLECTTOPIC, DECOLLECTTOPIC, GETCOLLECTLIST } from \"../../constants/index/index\";\r\n\r\nconst INDEX_STATE = {\r\n  listLoading: false,    // 列表加载状态\r\n  detailLoading: false,    // 详情加载状态\r\n  collectListLoading: false,    // 收藏列表加载状态\r\n  tabList: [    // 列表标签\r\n    { key: \"all\", tab: \"全部\" },\r\n    { key: \"good\", tab: \"精华\" },\r\n    { key: \"share\", tab: \"分享\" },\r\n    { key: \"ask\", tab: \"问答\" },\r\n    { key: \"job\", tab: \"招聘\" },\r\n    { key: \"dev\", tab: \"客户端测试\" }\r\n  ],\r\n  changetab: { key: \"all\", tab: \"全部\" },    // 选中标签\r\n  searchData: {    // 搜索条件数据\r\n    page: 1,\r\n    tab: \"all\",\r\n    limit: 20,\r\n    mdrender: true\r\n  },\r\n  dataList: [],    // 列表数据\r\n  dataDetail: {},    // 详情数据\r\n  collectList: []    // 收藏列表数据\r\n};\r\n\r\nexport default function index (state = INDEX_STATE, action) {\r\n  switch (action.type) {\r\n  case SETLISTLOADING: // 设置列表loading状态\r\n    return {\r\n      ...state,\r\n      listLoading: action.listLoading,\r\n    };\r\n  case SETDETAILLOADING: // 设置详情loading状态\r\n    return {\r\n      ...state,\r\n      detailLoading: action.detailLoading,\r\n    };\r\n  case SETCOLLECTLISTLOADING:  // 设置收藏列表loading状态\r\n    return {\r\n      ...state,\r\n      collectListLoading: action.collectListLoading,\r\n    };\r\n  case CHANGETABITEM:  // 设置列表标签选中获取数据\r\n    return {\r\n      ...state,\r\n      listLoading: false,\r\n      changetab: action.data,\r\n      searchData: action.searchData,\r\n      dataList: action.dataList\r\n    };\r\n  case GETTOPICDETAIL:  // 设置详情数据\r\n    return {\r\n      ...state,\r\n      detailLoading: false,\r\n      dataDetail: action.dataDetail\r\n    };\r\n  case COLLECTTOPIC:  // 收藏主题\r\n    // eslint-disable-next-line no-case-declarations\r\n    let dataDetail = state.dataDetail;\r\n    dataDetail.is_collect = action.is_collect;\r\n    return {\r\n      ...state,\r\n      dataDetail: dataDetail\r\n    };\r\n  case DECOLLECTTOPIC:  // 取消收藏主题\r\n    // eslint-disable-next-line no-case-declarations\r\n    let dedataDetail = state.dataDetail;\r\n    dedataDetail.is_collect = action.is_collect;\r\n    return {\r\n      ...state,\r\n      dataDetail: dedataDetail\r\n    };\r\n  case GETCOLLECTLIST:  // 设置收藏列表\r\n    return {\r\n      ...state,\r\n      collectListLoading: false,\r\n      collectList: action.collectList\r\n    };\r\n  default:\r\n    return state;\r\n  }\r\n}","import { SETLOGINLOADING, SETUSERINFOLOADING, SETMESSAGELISTLOADING, SETTOKEN, ACCESSTOKEN, GETUSERINFO, GETMESSAGECOUNT, GETMESSAGELIST } from \"../../constants/user/index\";\r\n\r\nconst USER_STATE = {\r\n  loginLoading: false,   // 登录加载状态\r\n  userinfoLoading: false,   // 用户信息加载状态\r\n  messageListLoading: false,   // 消息加载状态\r\n  token: \"\",   // 登录校验\r\n  simpleUserInfo: {},   // 简洁用户数据\r\n  userInfo: {},   // 详细用户数据\r\n  messageCount: 0,   // 用户信息数量\r\n  messageList: {}   // 用户信息列表\r\n};\r\n\r\nexport default function index (state = USER_STATE, action) {\r\n  switch (action.type) {\r\n  case SETLOGINLOADING:  // 设置登录loading状态\r\n    return {\r\n      ...state,\r\n      loginLoading: action.loginLoading\r\n    };\r\n  case SETUSERINFOLOADING:  // 设置获取用户数据loading状态\r\n    return {\r\n      ...state,\r\n      userinfoLoading: action.userinfoLoading\r\n    };\r\n  case SETMESSAGELISTLOADING:  // 设置获取消息列表loading状态\r\n    return {\r\n      ...state,\r\n      messageListLoading: action.messageListLoading\r\n    };\r\n  case SETTOKEN:  // 设置登录token\r\n    return {\r\n      ...state,\r\n      loginLoading: false,\r\n      token: action.token\r\n    };\r\n  case ACCESSTOKEN:  // 登录token校验\r\n    return {\r\n      ...state,\r\n      simpleUserInfo: action.data\r\n    };\r\n  case GETUSERINFO:  // 获取用户数据\r\n    return {\r\n      ...state,\r\n      userinfoLoading: false,\r\n      userInfo: action.data\r\n    };\r\n  case GETMESSAGECOUNT:  // 获取消息数量\r\n    return {\r\n      ...state,\r\n      messageCount: action.data\r\n    };\r\n  case GETMESSAGELIST:  // 获取消息列表\r\n    return {\r\n      ...state,\r\n      messageListLoading: false,\r\n      messageList: action.data\r\n    };\r\n  default:\r\n    return state;\r\n  }\r\n}","import { combineReducers } from \"redux\";\r\nimport index from \"./index/index\";\r\nimport user from \"./user/index\";\r\n\r\nexport default combineReducers({\r\n  index,\r\n  user\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport rootReducer from \"../reducers\";\r\n\r\nconst middlewares = [\r\n  thunkMiddleware\r\n];\r\n// eslint-disable-next-line no-undef\r\nif (process.env.NODE_ENV === \"development\") {\r\n  middlewares.push(require(\"redux-logger\").createLogger());\r\n}\r\nconst enhancer = applyMiddleware(...middlewares);\r\n\r\nexport default function configStore () {\r\n  const store = createStore(rootReducer, enhancer);\r\n  return store;\r\n}","import React, { Component } from \"react\";\r\nimport { Spin } from \"antd\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Loading extends Component {\r\n  render() {\r\n    return (\r\n      <div style={{width: \"90vw\", height: \"80vh\"}}>\r\n        <Spin tip=\"Loading...\" size=\"large\" style={{width: \"90vw\", height: \"80vh\"}}>\r\n          { this.props.children }\r\n        </Spin>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLoading.propTypes = {\r\n  children: PropTypes.any\r\n};\r\n\r\nexport default Loading;","import Loadable from \"react-loadable\";\r\nimport Loading from \"../components/loading/index\";\r\n\r\nlet routes = [\r\n  {\r\n    path: \"/\",\r\n    exact: true,\r\n    component: Loadable({\r\n      loader: () => import(\"../view/topic/index\"),\r\n      loading: Loading,\r\n    })\r\n  },\r\n  {\r\n    path: \"/message\",\r\n    component: Loadable({\r\n      loader: () => import(\"../view/message/index\"),\r\n      loading: Loading,\r\n    })\r\n  },\r\n  {\r\n    path: \"/collect\",\r\n    component: Loadable({\r\n      loader: () => import(\"../view/collect/index\"),\r\n      loading: Loading,\r\n    })\r\n  },\r\n  {\r\n    path: \"/login\",\r\n    component: Loadable({\r\n      loader: () => import(\"../view/login/index\"),\r\n      loading: Loading,\r\n    })\r\n  },\r\n  {\r\n    path: \"/detail\",\r\n    component: Loadable({\r\n      loader: () => import(\"../view/detail/index\"),\r\n      loading: Loading,\r\n    })\r\n  }\r\n];\r\n\r\nexport default routes;","import React, { Component } from \"react\";\r\nimport { Layout, Badge } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { BrowserRouter as Router, Link, Route, Switch, Redirect } from \"react-router-dom\";\r\nimport { getLocalStorage } from \"../../utils/index\";\r\nimport { getmessagecount } from \"../../actions/user/index\";\r\n\r\nimport routes from \"../../router/index\";\r\n\r\nimport \"./index.css\";\r\n\r\nconst { Header, Content, Footer } = Layout;\r\n\r\nclass Index extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  UNSAFE_componentWillMount ()  {\r\n    // 获取用户消息数量\r\n    if (this.props.user.token || getLocalStorage(\"token\")) {\r\n      this.props.getmessagecount({token: this.props.user.token || getLocalStorage(\"token\")});\r\n    }\r\n  }\r\n\r\n  // 退出登录\r\n  goLoginOut () {\r\n    localStorage.clear();\r\n    window.history.go(0);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Layout id=\"components-layout-index\">\r\n          <Header style={{ width: \"100%\" }}>\r\n            <div className=\"site-header\">\r\n              <img className=\"logo\" src={ require(\"../../assets/icons/logo.svg\") } alt=\"logo\" />\r\n              <span className=\"navbar-link navbar-noright-link\">\r\n                <span><Link to=\"/\">首页</Link></span>\r\n                {\r\n                  this.props.user.token || getLocalStorage(\"token\") ? <Badge dot={true} count={this.props.user.messageCount}>\r\n                    <span><Link to=\"/message\">消息</Link></span>\r\n                  </Badge> : \"\"\r\n                }\r\n                {\r\n                  this.props.user.token || getLocalStorage(\"token\") ? <span><Link to=\"/collect\">收藏</Link></span> : \"\"\r\n                }\r\n                <span><a href=\"https://github.com/guoqirong/react-cnode\" rel=\"noopener noreferrer\" target=\"_blank\">GitHub仓库</a></span>\r\n                {\r\n                  this.props.user.token || getLocalStorage(\"token\") ? <span><span onClick={this.goLoginOut.bind(this)}>退出</span></span> : <span><Link to=\"/login\">登录</Link></span>\r\n                }\r\n              </span>\r\n            </div>\r\n          </Header>\r\n          <Content className=\"site-layout\" style={{ width: \"90%\", margin: \"10px auto\"}}>\r\n            <div>\r\n              <Switch>\r\n                {\r\n                  routes.map((route,key)=>{\r\n                    if(route.exact){\r\n                      return <Route key={key} exact path={route.path}\r\n                        render={props => (\r\n                          <route.component {...props} routes={route.routes} />\r\n                        )}\r\n                      />;\r\n                    }else{\r\n                      return <Route  key={key}  path={route.path}\r\n                        render={props => (\r\n                          <route.component {...props} routes={route.routes} />\r\n                        )}\r\n                      />;\r\n                    }\r\n                  })\r\n                }\r\n                <Redirect from=\"/*\" to=\"/\" />\r\n              </Switch>\r\n            </div>\r\n          </Content>\r\n          <Footer style={{ textAlign: \"center\", backgroundColor: \"#ffffff\", color: \"#ababab\" }}>\r\n            <div>CNode 社区为国内最专业的 Node.js 开源技术社区，致力于 Node.js 的技术研究。</div>\r\n            <div>CNode 社区版权归xxxxxx所有</div>\r\n          </Footer>\r\n        </Layout>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\n// 设置props参数\r\nIndex.propTypes = {\r\n  user: PropTypes.object.isRequired,\r\n  getmessagecount: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect((state) => {\r\n  return {\r\n    user: state.user\r\n  };\r\n}, (dispatch) => {\r\n  return {\r\n    getmessagecount: (data) => dispatch(getmessagecount(data))\r\n  };\r\n})(Index);","import React from \"react\";\r\nimport Index from \"./view/index/index\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Index />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","/* eslint-disable no-undef */\r\n// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { \"Service-Worker\": \"script\" }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport configStore from \"./store\";\r\nimport \"./assets/style/index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nconst store = configStore();\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>, \r\n  document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","/* eslint-disable no-undef */\r\n\r\nconst config = {};\r\n// 获取运行环境\r\nconfig.IS_PROD = process.env.NODE_ENV === \"production\";\r\n// 接口地址设置\r\nconfig.BASE_URL = config.IS_PROD ? \"https://cnodejs.org\" : \"https://cnodejs.org\";\r\n// 接口端口设置\r\nconfig.CODE_BASE_PORT = \"\";\r\n// 拼接网关路径\r\nconfig.GATEWAY_URL = config.BASE_URL + config.CODE_BASE_PORT;\r\n\r\nexport default config;","\r\nimport config from \"../constants/config\";\r\n\r\n// 主题\r\nexport const API_TOPICS = `${config.GATEWAY_URL}/api/v1/topics`;\r\nexport const API_TOPIC = `${config.GATEWAY_URL}/api/v1/topic/`;\r\n\r\n// 主题收藏\r\nexport const API_TOPIC_COLLECT = `${config.GATEWAY_URL}/api/v1/topic_collect/collect`;\r\nexport const API_TOPIC_DECOLLECT = `${config.GATEWAY_URL}/api/v1/topic_collect/de_collect`;\r\nexport const API_TOPIC_COLLECTLIST = `${config.GATEWAY_URL}/api/v1/topic_collect/`;\r\n\r\n// 用户\r\nexport const API_USER = `${config.GATEWAY_URL}/api/v1/user/`;\r\nexport const API_ACCESSTOKEN = `${config.GATEWAY_URL}/api/v1/accesstoken`;\r\n\r\n// 消息通知\r\nexport const API_MESSAGE_COUNT = `${config.GATEWAY_URL}/api/v1/message/count`;\r\nexport const API_MESSAGE = `${config.GATEWAY_URL}/api/v1/messages`;\r\nexport const API_MESSAGE_MARKALL = `${config.GATEWAY_URL}/api/v1/message/mark_all`;\r\nexport const API_MESSAGE_MARKONE = `${config.GATEWAY_URL}/api/v1/message/mark_one/`;\r\n","// 设置登录loading状态\r\nexport const SETLOGINLOADING = \"SETLOGINLOADING\";\r\n// 设置获取用户数据loading状态\r\nexport const SETUSERINFOLOADING = \"SETUSERINFOLOADING\";\r\n// 设置获取消息列表loading状态\r\nexport const SETMESSAGELISTLOADING = \"SETMESSAGELISTLOADING\";\r\n// 设置登录token\r\nexport const SETTOKEN = \"SETTOKEN\";\r\n// 登录token校验\r\nexport const ACCESSTOKEN = \"ACCESSTOKEN\";\r\n// 获取用户数据\r\nexport const GETUSERINFO = \"GETUSERINFO\";\r\n// 获取消息数量\r\nexport const GETMESSAGECOUNT = \"GETMESSAGECOUNT\";\r\n// 获取消息列表\r\nexport const GETMESSAGELIST = \"GETMESSAGELIST\";","import {\r\n  SETLOGINLOADING,\r\n  SETUSERINFOLOADING,\r\n  SETMESSAGELISTLOADING,\r\n  SETTOKEN,\r\n  ACCESSTOKEN,\r\n  GETUSERINFO,\r\n  GETMESSAGECOUNT,\r\n  GETMESSAGELIST\r\n} from \"../../constants/user/index\";\r\nimport httpRequest from \"../../utils/request\";\r\nimport { setLocalStorage } from \"../../utils/index\";\r\nimport { API_ACCESSTOKEN, API_USER, API_MESSAGE_COUNT, API_MESSAGE, API_MESSAGE_MARKONE, API_MESSAGE_MARKALL } from \"../../constants/api\";\r\n\r\n// 设置登录loading状态\r\nexport const setloginloading = (val) => {\r\n  return {\r\n    type: SETLOGINLOADING,\r\n    loginLoading: val\r\n  };\r\n};\r\n// 设置获取用户数据loading状态\r\nexport const setuserinfoloading = (val) => {\r\n  return {\r\n    type: SETUSERINFOLOADING,\r\n    userinfoLoading: val\r\n  };\r\n};\r\n// 设置获取消息列表loading状态\r\nexport const setmessagelistloading = (val) => {\r\n  return {\r\n    type: SETMESSAGELISTLOADING,\r\n    messageListLoading: val\r\n  };\r\n};\r\n// 设置登录token\r\nexport const settoken = (data) => {\r\n  return {\r\n    type: SETTOKEN,\r\n    token: data.token\r\n  };\r\n};\r\n// 设置用户数据\r\nexport const setUserData = (data) => {\r\n  return data;\r\n};\r\n// 登录token校验\r\nexport const accesstoken = (data) => {\r\n  return dispatch => {\r\n    dispatch(setloginloading(true));\r\n    httpRequest({\r\n      url: API_ACCESSTOKEN,\r\n      method: \"POST\",\r\n      data: {\r\n        accesstoken: data.token\r\n      }\r\n    }).then((res) => {\r\n      let resData = {\r\n        type: ACCESSTOKEN,\r\n        data: res\r\n      };\r\n      if (res.success) {\r\n        setLocalStorage(\"token\", data.token);\r\n        setLocalStorage(\"userName\", res.loginname);\r\n        dispatch(setUserData(resData));\r\n      }\r\n    }).catch((e) => {\r\n      dispatch(setloginloading(false));\r\n      console.log(e);\r\n    });\r\n  };\r\n};\r\n// 获取用户数据\r\nexport const getuserinfo = (data) => {\r\n  return dispatch => {\r\n    dispatch(setuserinfoloading(true));\r\n    httpRequest({\r\n      url: API_USER + data.userName,\r\n      method: \"GET\"\r\n    }).then((res) => {\r\n      let resData = {\r\n        type: GETUSERINFO,\r\n        data: res.data\r\n      };\r\n      dispatch(setUserData(resData));\r\n    }).catch((e) => {\r\n      console.log(e);\r\n    });\r\n  };\r\n};\r\n// 获取消息数量\r\nexport const getmessagecount = (data) => {\r\n  return dispatch => {\r\n    httpRequest({\r\n      url: API_MESSAGE_COUNT,\r\n      method: \"GET\",\r\n      params: {\r\n        accesstoken: data.token\r\n      }\r\n    }).then((res) => {\r\n      let resData = {\r\n        type: GETMESSAGECOUNT,\r\n        data: res.success ? res.data : res\r\n      };\r\n      dispatch(setUserData(resData));\r\n    }).catch((e) => {\r\n      console.log(e);\r\n    });\r\n  };\r\n};\r\n// 获取消息列表\r\nexport const getmessagelist = (data) => {\r\n  return dispatch => {\r\n    dispatch(setmessagelistloading(true));\r\n    httpRequest({\r\n      url: API_MESSAGE,\r\n      method: \"GET\",\r\n      params: {\r\n        accesstoken: data.token,\r\n        mdrender: true\r\n      }\r\n    }).then((res) => {\r\n      let resData = {\r\n        type: GETMESSAGELIST,\r\n        data: res.data\r\n      };\r\n      dispatch(setUserData(resData));\r\n    }).catch((e) => {\r\n      console.log(e);\r\n    });\r\n  };\r\n};\r\n// 设置已读一条消息\r\nexport const readonemessage = (data) => {\r\n  return dispatch => {\r\n    httpRequest({\r\n      url: API_MESSAGE_MARKONE + data.id,\r\n      method: \"POST\",\r\n      data: {\r\n        accesstoken: data.token\r\n      }\r\n    }).then(() => {\r\n      dispatch(getmessagelist({token: data.token}));\r\n    }).catch((e) => {\r\n      console.log(e);\r\n    });\r\n  };\r\n};\r\n// 设置已读全部消息\r\nexport const readallmessage = (data) => {\r\n  return dispatch => {\r\n    httpRequest({\r\n      url: API_MESSAGE_MARKALL,\r\n      method: \"POST\",\r\n      data: {\r\n        accesstoken: data.token\r\n      }\r\n    }).then(() => {\r\n      dispatch(getmessagelist({token: data.token}));\r\n    }).catch((e) => {\r\n      console.log(e);\r\n    });\r\n  };\r\n};"],"sourceRoot":""}