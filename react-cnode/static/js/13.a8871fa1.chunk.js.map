{"version":3,"sources":["view/login/index.js"],"names":["IndexMessage","props","state","getLocalStorage","this","getmessagecount","token","user","goBack","values","accesstoken","history","go","title","style","height","wrapperCol","offset","span","onFinish","bind","width","margin","Item","name","label","rules","required","message","type","placeholder","gutter","loading","loginLoading","htmlType","onClick","Component","connect","dispatch","data"],"mappings":"gTAQMA,E,kDACJ,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IACDC,MAAQ,GAFG,E,yEAQZC,YAAgB,WAClBC,KAAKH,MAAMI,gBAAgB,CAACC,MAAOF,KAAKH,MAAMM,KAAKD,OAASH,YAAgB,WAC5EC,KAAKI,Y,kDAMHL,YAAgB,UAClBC,KAAKI,W,+BAKCC,GACRL,KAAKH,MAAMS,YAAYD,K,+BAKvBL,KAAKH,MAAMU,QAAQC,IAAI,K,+BAIvB,OACE,uBAAMC,MAAM,eAAKC,MAAO,CAAEC,OAAQ,+BAChC,uBACEC,WAAY,CAAEC,OAAQ,EAAGC,KAAM,IAC/BC,SAAUf,KAAKe,SAASC,KAAKhB,MAC7BU,MAAO,CAAEO,MAAO,MAAOC,OAAQ,WAC/B,sBAAMC,KAAN,CACEC,KAAK,QACLC,MAAM,GACNC,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,sCACTC,KAAM,YAIV,uBAAOC,YAAY,0CAErB,sBAAMP,KAAN,KACE,uBAAKQ,OAAQ,IACX,uBAAKb,KAAM,IAAI,uBAAQc,QAAS5B,KAAKH,MAAMM,KAAK0B,aAAcJ,KAAK,UAAUK,SAAS,SAASpB,MAAO,CAAEO,MAAO,SAAhG,iBACf,uBAAKH,KAAM,IAAI,uBAAQc,QAAS5B,KAAKH,MAAMM,KAAK0B,aAAcnB,MAAO,CAAEO,MAAO,QAAUc,QAAS/B,KAAKI,OAAOY,KAAKhB,OAAnG,yB,GAvDFgC,aAiFZC,uBATE,SAACnC,GAAD,MAAY,CAC3BK,KAAML,EAAMK,SAGM,SAAC+B,GAAD,MAAe,CACjC5B,YAAa,SAAC6B,GAAD,OAAUD,EAAS5B,YAAY6B,KAC5ClC,gBAAiB,SAACkC,GAAD,OAAUD,EAASjC,YAAgBkC,QAGvCF,CAA+BrC","file":"static/js/13.a8871fa1.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Card, Form, Input, Button, Row, Col } from \"antd\";\r\n\r\nimport { accesstoken, getmessagecount } from \"../../actions/user/index\";\r\nimport { getLocalStorage } from \"../../utils/index\";\r\n\r\nclass IndexMessage extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n  \r\n  UNSAFE_componentWillUpdate () {\r\n    // 登录成功返回上一页\r\n    if (getLocalStorage(\"token\")) {\r\n      this.props.getmessagecount({token: this.props.user.token || getLocalStorage(\"token\")});\r\n      this.goBack();\r\n    }\r\n  }\r\n\r\n  UNSAFE_componentWillMount () {\r\n    // 判断用户是否已登录\r\n    if (getLocalStorage(\"token\")) {\r\n      this.goBack();\r\n    }\r\n  }\r\n\r\n  // 表单提交\r\n  onFinish (values) {\r\n    this.props.accesstoken(values);\r\n  }\r\n\r\n  // 返回上一页\r\n  goBack () {\r\n    this.props.history.go(-1);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Card title=\"登录\" style={{ height: \"calc(100vh - 50px - 120px)\" }}>\r\n        <Form \r\n          wrapperCol={{ offset: 0, span: 24, }}\r\n          onFinish={this.onFinish.bind(this)}\r\n          style={{ width: \"50%\", margin: \"0 auto\" }}>\r\n          <Form.Item\r\n            name=\"token\"\r\n            label=\"\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"请输入token校验\",\r\n                type: \"string\"\r\n              },\r\n            ]}\r\n          >\r\n            <Input placeholder=\"accesstoken 登录校验\" />\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Row gutter={10}>\r\n              <Col span={12}><Button loading={this.props.user.loginLoading} type=\"primary\" htmlType=\"submit\" style={{ width: \"100%\" }}>登录</Button></Col>\r\n              <Col span={12}><Button loading={this.props.user.loginLoading} style={{ width: \"100%\" }} onClick={this.goBack.bind(this)}>取消</Button></Col>\r\n            </Row>\r\n          </Form.Item>\r\n        </Form>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\n// 设置props参数\r\nIndexMessage.propTypes = {\r\n  user: PropTypes.object.isRequired,\r\n  history: PropTypes.object.isRequired,\r\n  accesstoken: PropTypes.func.isRequired,\r\n  getmessagecount: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapState = (state) => ({\r\n  user: state.user\r\n});\r\n\r\nconst mapDispatch = (dispatch) => ({\r\n  accesstoken: (data) => dispatch(accesstoken(data)),\r\n  getmessagecount: (data) => dispatch(getmessagecount(data))\r\n});\r\n\r\nexport default connect(mapState, mapDispatch)(IndexMessage);"],"sourceRoot":""}